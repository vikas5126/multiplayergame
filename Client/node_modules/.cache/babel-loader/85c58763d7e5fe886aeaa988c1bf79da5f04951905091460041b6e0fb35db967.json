{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikas\\\\OneDrive\\\\Desktop\\\\multiplayergame\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from \"./App.module.css\";\nimport { Square } from './Square/Square';\nimport { io } from \"socket.io-client\";\nimport Swal from 'sweetalert2';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst renderFrom = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState(renderFrom);\n  const [currentPlayer, setCurrentPlayer] = useState(\"circle\");\n  const [playOnline, setPlayOnline] = useState(false);\n  const [playerName, setPlayerName] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const [finishedState, setFinishedState] = useState(false);\n  const [finishedArrayState, setFinishedArrayState] = useState([]);\n  const [opponentName, setOpponentName] = useState(null);\n  const [playingAs, setPlayingAs] = useState(null);\n  const checkWinner = () => {\n    // row dynamic \n    for (let row = 0; row < gameState.length; row++) {\n      if (gameState[row][0] === gameState[row][1] && gameState[row][1] === gameState[row][2]) {\n        setFinishedArrayState([row * 3 + 0, row * 3 + 1, row * 3 + 2]);\n        return gameState[row][0];\n      }\n    }\n\n    // column dynamic \n    for (let col = 0; col < gameState.length; col++) {\n      if (gameState[0][col] === gameState[1][col] && gameState[1][col] === gameState[2][col]) {\n        setFinishedArrayState([0 * 3 + col, 1 * 3 + col, 2 * 3 + col]);\n        return gameState[0][col];\n      }\n    }\n    if (gameState[0][0] === gameState[1][1] && gameState[1][1] === gameState[2][2]) {\n      return gameState[0][0];\n    }\n    if (gameState[0][2] === gameState[1][1] && gameState[1][1] === gameState[2][0]) {\n      return gameState[0][2];\n    }\n    const isDrawMatch = gameState.flat().every(e => {\n      if (e === 'circle' || e === 'cross') return true;\n    });\n    if (isDrawMatch) return \"draw\";\n    return null;\n  };\n  useEffect(() => {\n    const winner = checkWinner();\n    if (winner) {\n      setFinishedState(winner);\n    }\n  }, [gameState]);\n  const takePlayerName = async () => {\n    const result = await Swal({\n      title: \"Enter your IP address\",\n      input: \"text\",\n      inputLabel: \"Enter Your Name\",\n      showCancelButton: true\n      // inputValidator: (value) => {\n      //   if (!value) {\n      //     return \"You need to write something!\";\n      //   }\n      // }\n    });\n    console.log(result);\n    return result;\n  };\n  socket === null || socket === void 0 ? void 0 : socket.on(\"opponentLeftMatch\", () => {\n    setFinishedState(\"opponentLeftMatch\");\n  });\n  socket === null || socket === void 0 ? void 0 : socket.on(\"playerMoveFromServer\", data => {\n    const id = data.state.id;\n    setGameState(prevState => {\n      let newState = [...prevState];\n      const rowIndex = Math.floor(id / 3);\n      const colIndex = id % 3;\n      newState[rowIndex][colIndex] = data.state.sign;\n      return newState;\n    });\n    setCurrentPlayer(data.state.sign === 'circle' ? 'cross' : \"circle\");\n  });\n  socket === null || socket === void 0 ? void 0 : socket.on(\"connect\", function () {\n    setPlayOnline(true);\n  });\n  socket === null || socket === void 0 ? void 0 : socket.on(\"opponentNotFound\", function () {\n    setOpponentName(false);\n  });\n  socket === null || socket === void 0 ? void 0 : socket.on(\"opponetFound\", function (data) {\n    setPlayingAs(data.playingAs);\n    setOpponentName(data.opponentName);\n  });\n  async function playOnlineClick() {\n    const result = await takePlayerName();\n    if (!result) {\n      return;\n    }\n    const username = result;\n    setPlayerName(username);\n    const newSocket = io(\"http://localhost:3000\", {\n      autoConnect: true\n    });\n    newSocket === null || newSocket === void 0 ? void 0 : newSocket.emit(\"request_to_play\", {\n      playerName: username\n    });\n    setSocket(newSocket);\n  }\n\n  // if(!playOnline){\n  //   return(\n  //     <div className={styles.main}>\n  //       <button onClick={playOnlineClick} className={styles.playOnline}>\n  //         Play Online\n  //       </button>\n  //     </div>\n  //   )\n  // }\n\n  // if(playOnline && opponentName===false){\n  //   // console.log(playOnline);\n  //   console.log(opponentName);\n  //   return (\n  //     <div className={styles.waiting}>\n  //       <p>Waiting for opponent</p>\n  //     </div>\n  //   )\n  // }\n  // console.log('hello');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.moveDetection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.left} ${currentPlayer === playingAs ? `${styles.move}` + currentPlayer : \"\"}`,\n          children: playerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.right} ${currentPlayer === playingAs ? `${styles.move}` + currentPlayer : \"\"}`,\n          children: opponentName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tic Tac Toe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.squareWrapper,\n          children: gameState.map((arr, rowIndex) => arr.map((e, colIndex) => {\n            return /*#__PURE__*/_jsxDEV(Square, {\n              socket: socket,\n              playingAs: playingAs,\n              gameState: gameState,\n              finishedArrayState: finishedArrayState,\n              finishedState: finishedState,\n              currentPlayer: currentPlayer,\n              setCurrentPlayer: setCurrentPlayer,\n              setGameState: setGameState,\n              id: rowIndex * 3 + colIndex,\n              currentElement: e\n            }, rowIndex * 3 + colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 18\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), finishedState && finishedState !== \"opponentLeftMatch\" && finishedState !== \"draw\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"finished-state\",\n          children: [finishedState === playingAs ? \"You \" : finishedState, \" won the game\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), finishedState && finishedState !== \"opponentLeftMatch\" && finishedState === \"draw\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"finished-state\",\n          children: \"It's a Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), !finishedState && opponentName && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You are playing against \", opponentName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), finishedState && finishedState === \"opponentLeftMatch\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You won the match, Opponent has left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"OCDD+HVr0d+Bz/KLXh6JunA7lNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","styles","Square","io","Swal","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","renderFrom","App","_s","gameState","setGameState","currentPlayer","setCurrentPlayer","playOnline","setPlayOnline","playerName","setPlayerName","socket","setSocket","finishedState","setFinishedState","finishedArrayState","setFinishedArrayState","opponentName","setOpponentName","playingAs","setPlayingAs","checkWinner","row","length","col","isDrawMatch","flat","every","e","winner","takePlayerName","result","title","input","inputLabel","showCancelButton","console","log","on","data","id","state","prevState","newState","rowIndex","Math","floor","colIndex","sign","playOnlineClick","username","newSocket","autoConnect","emit","children","className","container","moveDetection","left","move","fileName","_jsxFileName","lineNumber","columnNumber","right","heading","squareWrapper","map","arr","currentElement","_c","$RefreshReg$"],"sources":["C:/Users/Vikas/OneDrive/Desktop/multiplayergame/Client/src/App.js"],"sourcesContent":["import React from 'react';\nimport styles from \"./App.module.css\"\nimport { Square } from './Square/Square';\nimport {io} from \"socket.io-client\"\nimport Swal from 'sweetalert2';\nimport { useState, useEffect } from 'react';\n\nconst renderFrom = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n];\n\nfunction App() {\n  const [gameState, setGameState] = useState(renderFrom);\n  const [currentPlayer, setCurrentPlayer] = useState(\"circle\");\n  const [playOnline, setPlayOnline] = useState(false);\n  const [playerName, setPlayerName] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const [finishedState, setFinishedState] = useState(false);\n  const [finishedArrayState, setFinishedArrayState] = useState([]);\n  const [opponentName, setOpponentName] = useState(null);\n  const [playingAs, setPlayingAs] = useState(null);\n\n  const checkWinner = () => {\n    // row dynamic \n    for(let row=0; row < gameState.length; row++){\n      if(gameState[row][0] === gameState[row][1] && gameState[row][1] === gameState[row][2]){\n        setFinishedArrayState([row*3+0, row*3+1, row*3+2])\n        return gameState[row][0];\n      }\n    }\n\n    // column dynamic \n    for(let col=0; col<gameState.length; col++){\n      if(gameState[0][col] === gameState[1][col] && gameState[1][col] === gameState[2][col]){\n        setFinishedArrayState([0*3 + col, 1*3 + col, 2*3 + col])\n        return gameState[0][col];\n      }  \n    }\n\n    if(gameState[0][0] === gameState[1][1] && gameState[1][1] === gameState[2][2]){\n      return gameState[0][0];\n    }\n\n    if(gameState[0][2] === gameState[1][1] && gameState[1][1] === gameState[2][0]){\n      return gameState[0][2];\n    }\n\n    const isDrawMatch = gameState.flat().every((e)=>{\n      if(e === 'circle' || e === 'cross')return true;\n    })\n\n    if(isDrawMatch) return \"draw\";\n\n    return null;\n  }\n\n  useEffect(()=> {\n    const winner = checkWinner();\n    if(winner){\n      setFinishedState(winner);\n    }\n  }, [gameState]);\n\n  const takePlayerName = async ()=> {\n    const result = await Swal({\n      title: \"Enter your IP address\",\n      input: \"text\",\n      inputLabel: \"Enter Your Name\",\n      showCancelButton: true,\n      // inputValidator: (value) => {\n      //   if (!value) {\n      //     return \"You need to write something!\";\n      //   }\n      // }\n    });\n    console.log(result);\n    return result;\n  };\n\n  socket?.on(\"opponentLeftMatch\", ()=>{\n    setFinishedState(\"opponentLeftMatch\");\n  })\n\n  socket?.on(\"playerMoveFromServer\", (data)=> {\n    const id = data.state.id;\n    setGameState((prevState)=> {\n      let newState = [...prevState];\n      const rowIndex = Math.floor(id/3);\n      const colIndex = id %3;\n      newState[rowIndex][colIndex] = data.state.sign;\n      return newState;\n    })\n    setCurrentPlayer(data.state.sign === 'circle' ? 'cross' :\"circle\");\n  })\n\n  socket?.on(\"connect\", function(){\n    setPlayOnline(true);\n  })\n\n  socket?.on(\"opponentNotFound\", function(){\n    setOpponentName(false);\n  })\n\n  socket?.on(\"opponetFound\", function(data){\n    setPlayingAs(data.playingAs);\n    setOpponentName(data.opponentName);\n  })\n\n  async function playOnlineClick(){\n    const result = await takePlayerName();\n    if(!result){\n      return ;\n    }\n    const username = result;\n    setPlayerName(username);\n\n    const newSocket = io(\"http://localhost:3000\", {\n      autoConnect: true,\n    })\n\n    newSocket?.emit(\"request_to_play\", {\n      playerName: username,\n    });\n\n    setSocket(newSocket);\n  }\n\n  // if(!playOnline){\n  //   return(\n  //     <div className={styles.main}>\n  //       <button onClick={playOnlineClick} className={styles.playOnline}>\n  //         Play Online\n  //       </button>\n  //     </div>\n  //   )\n  // }\n\n  // if(playOnline && opponentName===false){\n  //   // console.log(playOnline);\n  //   console.log(opponentName);\n  //   return (\n  //     <div className={styles.waiting}>\n  //       <p>Waiting for opponent</p>\n  //     </div>\n  //   )\n  // }\n  // console.log('hello');\n  return (\n    <>\n    <div className={styles.container}>\n      <div className={styles.moveDetection}>\n        <div className={`${styles.left} ${currentPlayer === playingAs ? `${styles.move}`+ currentPlayer : \"\"}`}>\n          {playerName}\n        </div>\n        <div className={`${styles.right} ${currentPlayer === playingAs ? `${styles.move}`+ currentPlayer : \"\"}`}>\n          {opponentName}\n        </div>\n      </div>\n      <div className={styles.heading}>\n        <h1>Tic Tac Toe</h1>\n        <div className={styles.squareWrapper}>\n          {gameState.map((arr, rowIndex)=> \n        arr.map((e, colIndex)=>{\n          return <Square\n                  socket={socket} \n                  playingAs={playingAs}\n                  gameState={gameState}\n                  finishedArrayState={finishedArrayState}\n                  finishedState={finishedState}\n                  currentPlayer={currentPlayer}\n                  setCurrentPlayer={setCurrentPlayer}\n                  setGameState={setGameState}\n                  id={rowIndex*3 + colIndex}\n                  key={rowIndex *3 + colIndex}\n                  currentElement={e}\n          />\n        }))}\n        </div>\n        {finishedState &&\n          finishedState !== \"opponentLeftMatch\" &&\n          finishedState !== \"draw\" && (\n            <h3 className=\"finished-state\">\n              {finishedState === playingAs ? \"You \" : finishedState} won the\n              game\n            </h3>\n          )}\n        {finishedState &&\n          finishedState !== \"opponentLeftMatch\" &&\n          finishedState === \"draw\" && (\n            <h3 className=\"finished-state\">It's a Draw</h3>\n          )}\n      </div>\n      {!finishedState && opponentName && (\n        <h2>You are playing against {opponentName}</h2>\n      )}\n      {finishedState && finishedState === \"opponentLeftMatch\" && (\n        <h2>You won the match, Opponent has left</h2>\n      )}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}