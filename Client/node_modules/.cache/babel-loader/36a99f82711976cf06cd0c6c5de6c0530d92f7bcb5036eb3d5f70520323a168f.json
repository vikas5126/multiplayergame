{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikas\\\\OneDrive\\\\Desktop\\\\multiplayergame\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from \"./App.module.css\";\nimport { Square } from './Square/Square';\nimport { io } from \"socket.io-client\";\nimport swal from 'sweetalert2';\nimport { useState, useEffect } from 'react';\nimport { getByTitle } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst renderFrom = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState(renderFrom);\n  const [currentPlayer, setCurrentPlayer] = useState(\"circle\");\n  const [playOnline, setPlayOnline] = useState(false);\n  const [playerName, setPlayerName] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const checkWinner = () => {\n    // row dynamic \n    for (let row = 0; row < gameState.length; row++) {\n      if (gameState[row][0] === gameState[row][1] && gameState[row][1] === gameState[row][2]) {\n        return gameState[row][0];\n      }\n    }\n\n    // column dynamic \n    for (let col = 0; col < gameState.length; col++) {\n      if (gameState[0][col] === gameState[1][col] && gameState[1][col] === gameState[2][col]) {\n        return gameState[0][col];\n      }\n    }\n    if (gameState[0][0] === gameState[1][1] && gameState[1][1] === gameState[2][2]) {\n      return gameState[0][0];\n    }\n    if (gameState[0][2] === gameState[1][1] && gameState[1][1] === gameState[2][0]) {\n      return gameState[0][2];\n    }\n    const isDrawMatch = gameState.flat().every(e => {\n      if (e === 'circle' || e === 'cross') return true;\n    });\n    if (isDrawMatch) return \"draw\";\n    return null;\n  };\n  const takePlayerName = async () => {\n    const result = await swal.fire({\n      title: \"Enter your name\",\n      input: \"text\",\n      showCancleButton: true,\n      inputValidator: value => {\n        if (!value) {\n          return \"You need to write something!\";\n        }\n      }\n    });\n    return result;\n  };\n  async function playOnlineClick() {\n    const result = await takePlayerName();\n    if (!result.isConfirmed) {\n      return;\n    }\n    const username = result.value;\n    setPlayerName(username);\n    const newSocket = io(\"http://localhost:3000\", {\n      autoConnect: true\n    });\n    newSocket === null || newSocket === void 0 ? void 0 : newSocket.emit(\"request_to_play\", {\n      playerName: username\n    });\n    setSocket(newSocket);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.moveDetection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.left,\n          children: \"yourSelf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.right,\n          children: \"opponent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tic Tac Toe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.squareWrapper,\n          children: gameState.map((arr, rowIndex) => arr.map((e, colIndex) => {\n            return /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 18\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"U9gtmkzauitcDiCHi0eIek88apU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","styles","Square","io","swal","useState","useEffect","getByTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","renderFrom","App","_s","gameState","setGameState","currentPlayer","setCurrentPlayer","playOnline","setPlayOnline","playerName","setPlayerName","socket","setSocket","checkWinner","row","length","col","isDrawMatch","flat","every","e","takePlayerName","result","fire","title","input","showCancleButton","inputValidator","value","playOnlineClick","isConfirmed","username","newSocket","autoConnect","emit","children","className","container","moveDetection","left","fileName","_jsxFileName","lineNumber","columnNumber","right","heading","squareWrapper","map","arr","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["C:/Users/Vikas/OneDrive/Desktop/multiplayergame/Client/src/App.js"],"sourcesContent":["import React from 'react';\nimport styles from \"./App.module.css\"\nimport { Square } from './Square/Square';\nimport {io} from \"socket.io-client\"\nimport swal from 'sweetalert2';\nimport { useState, useEffect } from 'react';\nimport { getByTitle } from '@testing-library/react';\n\nconst renderFrom = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n];\n\nfunction App() {\n  const [gameState, setGameState] = useState(renderFrom);\n  const [currentPlayer, setCurrentPlayer] = useState(\"circle\");\n  const [playOnline, setPlayOnline] = useState(false);\n  const [playerName, setPlayerName] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n\n  const checkWinner = () => {\n    // row dynamic \n    for(let row=0; row < gameState.length; row++){\n      if(gameState[row][0] === gameState[row][1] && gameState[row][1] === gameState[row][2]){\n        return gameState[row][0];\n      }\n    }\n\n    // column dynamic \n    for(let col=0; col<gameState.length; col++){\n      if(gameState[0][col] === gameState[1][col] && gameState[1][col] === gameState[2][col]){\n        return gameState[0][col];\n      }\n    }\n\n    if(gameState[0][0] === gameState[1][1] && gameState[1][1] === gameState[2][2]){\n      return gameState[0][0];\n    }\n\n    if(gameState[0][2] === gameState[1][1] && gameState[1][1] === gameState[2][0]){\n      return gameState[0][2];\n    }\n\n    const isDrawMatch = gameState.flat().every((e)=>{\n      if(e === 'circle' || e === 'cross')return true;\n    })\n\n    if(isDrawMatch) return \"draw\";\n\n    return null;\n  }\n\n  const takePlayerName = async ()=> {\n    const result = await swal.fire({\n      title: \"Enter your name\",\n      input: \"text\",\n      showCancleButton: true,\n      inputValidator: (value) => {\n        if(!value) {\n          return \"You need to write something!\";\n        }\n      },\n    });\n\n    return result;\n  };\n\n  async function playOnlineClick(){\n    const result = await takePlayerName();\n\n    if(!result.isConfirmed){\n      return ;\n    }\n    const username = result.value;\n    setPlayerName(username);\n\n    const newSocket = io(\"http://localhost:3000\", {\n      autoConnect: true,\n    })\n\n    newSocket?.emit(\"request_to_play\", {\n      playerName: username,\n    });\n\n    setSocket(newSocket);\n  }\n  return (\n    <>\n    <div className={styles.container}>\n      <div className={styles.moveDetection}>\n        <div className={styles.left}>\n          yourSelf\n        </div>\n        <div className={styles.right}>\n          opponent\n        </div>\n      </div>\n      <div className={styles.heading}>\n        <h1>Tic Tac Toe</h1>\n        <div className={styles.squareWrapper}>\n          {gameState.map((arr, rowIndex)=> \n        arr.map((e, colIndex)=>{\n          return <Square/>\n        }))}\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}