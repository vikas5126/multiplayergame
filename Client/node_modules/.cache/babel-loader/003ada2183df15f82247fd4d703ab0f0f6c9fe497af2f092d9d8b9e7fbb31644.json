{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikas\\\\OneDrive\\\\Desktop\\\\multiplayergame\\\\Client\\\\src\\\\Square\\\\Square.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./Square.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst circleSvg = /*#__PURE__*/_jsxDEV(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: [/*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"SVGRepo_bgCarrier\",\n    \"stroke-width\": \"0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"SVGRepo_tracerCarrier\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"SVGRepo_iconCarrier\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\",\n      stroke: \"#ffffff\",\n      \"stroke-width\": \"2\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\nconst crossSvg = /*#__PURE__*/_jsxDEV(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: [/*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"SVGRepo_bgCarrier\",\n    \"stroke-width\": \"0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"SVGRepo_tracerCarrier\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"SVGRepo_iconCarrier\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M19 5L5 19M5.00001 5L19 19\",\n      stroke: \"#fff\",\n      \"stroke-width\": \"1.5\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this);\nexport function Square({\n  gameState,\n  setGameState,\n  socket,\n  playingAs,\n  currentElement,\n  finishedArrayState,\n  setFinishedArrayState,\n  finishedState,\n  id,\n  currentPlayer,\n  setCurrentPlayer\n}) {\n  _s();\n  const [icon, setIcon] = useState(null);\n  const clickOnSquare = () => {\n    if (playingAs !== currentPlayer) {\n      return;\n    }\n    if (finishedState) {\n      return;\n    }\n    if (!icon) {\n      if (currentPlayer === \"circle\") {\n        setIcon(circleSvg);\n      } else {\n        setIcon(crossSvg);\n      }\n      const myCurrentPlayer = currentPlayer;\n      socket.emit(\"playerMoveFromClient\", {\n        state: {\n          id,\n          sign: myCurrentPlayer\n        }\n      });\n      setCurrentPlayer(currentPlayer === 'circle' ? 'cross' : 'circle');\n      setGameState(prevState => {\n        let newState = [...prevState];\n        const rowIndex = Math.floor(id / 3);\n        const colIndex = id % 3;\n        newState[rowIndex][colIndex] = myCurrentPlayer;\n        return newState;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.Square} \n        ${finishedState ? `${styles.notAllowed}` : \"\"} \n        ${currentPlayer !== playingAs ? `${styles.notAllowed}` : \"\"}\n        ${finishedArrayState.includes(id) ? finishedState + `${styles.won}` : \"\"}\n        ${finishedState && finishedState !== playingAs ? `${styles.grey}` : \"\"}\n        `,\n      onClick: clickOnSquare,\n      children: crossSvg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Square, \"I3dfeQkyGUHhpQ5YSvOHRkjDuaE=\");\n_c = Square;\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","circleSvg","viewBox","fill","xmlns","children","id","fileName","_jsxFileName","lineNumber","columnNumber","d","stroke","crossSvg","Square","gameState","setGameState","socket","playingAs","currentElement","finishedArrayState","setFinishedArrayState","finishedState","currentPlayer","setCurrentPlayer","_s","icon","setIcon","clickOnSquare","myCurrentPlayer","emit","state","sign","prevState","newState","rowIndex","Math","floor","colIndex","className","notAllowed","includes","won","grey","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vikas/OneDrive/Desktop/multiplayergame/Client/src/Square/Square.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Square.module.css\"\r\n\r\nconst circleSvg = (\r\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\r\n      <g\r\n        id=\"SVGRepo_tracerCarrier\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      ></g>\r\n      <g id=\"SVGRepo_iconCarrier\">\r\n        {\" \"}\r\n        <path\r\n          d=\"M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\r\n          stroke=\"#ffffff\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        ></path>{\" \"}\r\n      </g>\r\n    </svg>\r\n  );\r\n  \r\n  const crossSvg = (\r\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\r\n      <g\r\n        id=\"SVGRepo_tracerCarrier\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      ></g>\r\n      <g id=\"SVGRepo_iconCarrier\">\r\n        {\" \"}\r\n        <path\r\n          d=\"M19 5L5 19M5.00001 5L19 19\"\r\n          stroke=\"#fff\"\r\n          stroke-width=\"1.5\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        ></path>{\" \"}\r\n      </g>\r\n    </svg>\r\n  );\r\n\r\nexport function Square({\r\n  gameState, setGameState,\r\n  socket, playingAs,\r\n  currentElement,\r\n  finishedArrayState,\r\n  setFinishedArrayState, \r\n  finishedState,\r\n  id, currentPlayer,\r\n  setCurrentPlayer,\r\n}){\r\n    const [icon, setIcon] = useState(null);\r\n\r\n    const clickOnSquare = () => {\r\n      if(playingAs !== currentPlayer){\r\n        return;\r\n      }\r\n      if(finishedState){\r\n        return;\r\n      }\r\n      if(!icon){\r\n          if(currentPlayer === \"circle\"){\r\n            setIcon(circleSvg);\r\n          }\r\n          else{\r\n            setIcon(crossSvg);\r\n          }\r\n\r\n          const myCurrentPlayer = currentPlayer;\r\n\r\n          socket.emit(\"playerMoveFromClient\", {\r\n            state: {\r\n              id, \r\n              sign: myCurrentPlayer,\r\n            }\r\n          })\r\n          \r\n          setCurrentPlayer(currentPlayer === 'circle' ? 'cross' : 'circle');\r\n\r\n          setGameState((prevState) => {\r\n            let newState = [...prevState];\r\n            const rowIndex = Math.floor(id/3);\r\n            const colIndex = id % 3;\r\n            newState[rowIndex][colIndex] = myCurrentPlayer;\r\n            return newState;\r\n          });\r\n      }\r\n      \r\n    }\r\n    return (\r\n        <>\r\n        <div className={`${styles.Square} \r\n        ${finishedState ? `${styles.notAllowed}`: \"\"} \r\n        ${currentPlayer !== playingAs ? `${styles.notAllowed}` : \"\"}\r\n        ${finishedArrayState.includes(id) ? finishedState + `${styles.won}` : \"\"}\r\n        ${finishedState && finishedState !== playingAs ? `${styles.grey}` : \"\"}\r\n        `} onClick={clickOnSquare}> \r\n        {/* {currentElement === \"circle\" ? circleSvg : currentElement===\"cross\" ? crossSvg : icon} */}\r\n        {crossSvg}\r\n        </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}